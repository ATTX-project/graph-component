---
swagger: "2.0"
info:
  description: "ATTX GM internal  API for mapping the source data against a RML mapping\
    \ configuration and communication between Graph Manager the Workflow Component\
    \ and the Graph Store."
  version: "0.1"
  title: "ATTX GM API"
  contact:
    name: "ATTX project"
    url: "http://helsinki.fi/library"
  license:
    name: "MIT"
basePath: "/api/0.2/"
tags:
- name: "gmAPI"
  description: "Internal GM-API for graph manager"
  externalDocs:
    description: "just use it"
    url: "http://helsinki.fi/library"
schemes:
- "http"
paths:
  /index/{indexID}:
    get:
      tags:
      - "gmAPI"
      description: "Get status of the indexing job."
      produces:
      - "application/json"
      parameters:
      - name: "indexID"
        in: "path"
        description: "Fetch index with a specific ID."
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Successful response."
          schema:
            $ref: "#/definitions/IndexResult"
        410:
          description: "Index Gone."
    delete:
      description: "Delete index with a certain ID."
      parameters:
      - name: "indexID"
        in: "path"
        description: "Fetch index with a specific ID."
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "OK"
  /index:
    post:
      tags:
      - "gmAPI"
      operationId: "index_post"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "mapping"
        description: "Indexing object to pass to the Graph Manager API. Triggering\
          \ the creation of a index and possible handling of aliases between indexes."
        required: true
        schema:
          $ref: "#/definitions/Index"
      responses:
        202:
          description: "Accepted."
          schema:
            $ref: "#/definitions/IndexResult"
        400:
          description: "Invalid Input."
  /cluster:
    post:
      tags:
      - "gmAPI"
      description: "Initiates ID clustering"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "clustering"
        description: "Create IDs cluster graph based on used datasets."
        required: true
        schema:
          $ref: "#/definitions/Cluster"
      responses:
        200:
          description: "Done."
          schema:
            $ref: "#/definitions/IDsResult"
  /prov:
    get:
      tags:
      - "gmAPI"
      description: "Updates the Graph Store with provenance data."
      parameters:
      - name: "modifiedSince"
        in: "query"
        description: "Date since last check."
        required: false
        type: "string"
        format: "date-time"
      - name: "start"
        in: "query"
        description: "start provenance update."
        required: false
        type: "boolean"
        format: "string"
      - name: "wfapi"
        in: "query"
        description: "name of the image of the wfapi. will default to localhost"
        required: false
        type: "string"
        format: "string"
      - name: "graphStore"
        in: "query"
        description: "name of the image of the graph store. will default to localhost"
        required: false
        type: "string"
        format: "string"
      responses:
        200:
          description: "Done"
          schema:
            $ref: "#/definitions/ProvStatus"
  /linkstrategy:
    get:
      tags:
      - "gmAPI"
      description: "Retrieve all linking strategies from the graph store."
      responses:
        200:
          description: "Done"
          schema:
            type: array
            items:
              $ref: "#/definitions/Strategy"
  /linkstrategy/{strategyID}:
    get:
      tags:
      - "gmAPI"
      description: "Retrieve linking strategy from the graph store and associated parameters."
      parameters:
      - name: "strategyID"
        in: "path"
        description: "Fetch link with a specific ID."
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Done"
          schema:
            $ref: "#/definitions/StrategyResult"
  /link:
    post:
      tags:
      - "gmAPI"
      operationId: "links_post"
      parameters:
      - in: "body"
        name: "linking"
        description: "Create links between Working Data Graphs based on different linking implementation."
        required: true
        schema:
          $ref: "#/definitions/Link"
      responses:
        202:
          description: "Accepted."
        400:
          description: "Invalid Input."
  /link/{linkID}:
    get:
      tags:
      - "gmAPI"
      description: "Get status of the linking job."
      produces:
      - "application/json"
      parameters:
      - name: "linkID"
        in: "path"
        description: "Fetch link with a specific ID."
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Successful response."
          schema:
            $ref: "#/definitions/IndexResult"
        410:
          description: "Map Gone."
    delete:
      description: "Delete link with a certain ID."
      parameters:
      - name: "linkID"
        in: "path"
        description: "Fetch link with a specific ID."
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "OK"
definitions:
  Index:
    allOf:
    - required:
      - "mapping"
      - "plugin"
      - "sourceGraphs"
      - "targetEndpoint"
      properties:
        plugin:
          type: "string"
          description: "list of plugin names/IDs for different mappers"
          items:
            type: "string"
        targetEndpoint:
          type: "string"
        mapping:
          type: "object"
          properties: {}
        sourceGraphs:
          type: "array"
          items:
            type: "string"
        format:
          type: "string"
    - {}
  Strategy:
    required:
    - "uri"
    properties:
      uri:
        type: "string"
        format: "uri"
  IDsResult:
    required:
    - "IDCount"
    - "status"
    properties:
      IDCount:
        type: "string"
        format: "int64"
      status:
        type: "string"
        format: "string"
  IndexResult:
    required:
    - "id"
    - "status"
    properties:
      id:
        type: "integer"
        format: "int64"
      status:
        type: "string"
  StrategyResult:
    required:
    - "uri"
    - "parameters"
    properties:
      uri:
        type: "string"
        format: "uri"
      parameters:
        type: "object"
        properties: {}
  ProvStatus:
    required:
    - "lastStart"
    - "status"
    properties:
      lastStart:
        type: "string"
        format: "date-time"
      status:
        type: "string"
  Cluster:
    required:
    - "graphStore"
    properties:
      graphStore:
        type: "object"
        properties: {}
  Link:
    required:
    - "graphStore"
    - "strategy"
    properties:
      graphStore:
        type: "object"
        properties: {}
      strategy:
        type: "object"
        properties: {}
