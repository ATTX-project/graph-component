apply plugin: 'com.chrisgahlert.gradle-dcompose-plugin'

dependencies {
    // https://mvnrepository.com/artifact/org.apache.jena/apache-jena
    // TO DO: move to JENA:3.2.0
    compile 'org.apache.jena:apache-jena:3.2.0'
    testCompile \
        'info.cukes:cucumber-java8:1.2.5',
        'info.cukes:cucumber-junit:1.2.5',
        'com.mashape.unirest:unirest-java:1.4.9',
        'org.skyscreamer:jsonassert:1.4.0',
        'net.javacrumbs.json-unit:json-unit:1.16.0',
        'net.javacrumbs.json-unit:json-unit-fluent:1.16.0',
        'org.elasticsearch:elasticsearch:1.2.2',
        'org.uh.attx.gc:gc-rdf2json-indexer:1.0-SNAPSHOT'
}

dcompose {
    createComposeFile.useTags = true
    registry ("$registryURL") {
        // no user/pass
    }

    fuseki {
        forcePull = true
        forceRemoveImage = true
        image = "${imageRepo}:${imageRepoPort}/attx-fuseki:latest"
        exposedPorts = ['3030']
        portBindings = ['3030:3030']
        env = ['ADMIN_PASSWORD=pw123']
    }

    essiren {
        forcePull = true
        forceRemoveImage = true
        image = "${imageRepo}:${imageRepoPort}/essiren:latest"
        exposedPorts = ['9200', '9300']
        portBindings = ['9200:9200', '9300:9300']
    }

    es5 {
        forcePull = true
        forceRemoveImage = true
        image = "${imageRepo}:${imageRepoPort}/attx-es5:latest"
        exposedPorts = ['9210', '9310']
        portBindings = ['9210:9210', '9310:9310']
    }

    gmapi {
        forcePull = true
        forceRemoveImage = true
        image = "${imageRepo}:${imageRepoPort}/gm-api:latest"
        exposedPorts = ['4302']
        portBindings = ['4302:4302']
    }

    test {
        ignoreExitCode = true
        baseDir = file('.')
        dockerFilename = 'Dockerfile'
        binds = ["/var/run/docker.sock:/run/docker.sock"]
        command = ['sh', '-c', '/tmp/runTests.sh']
        dependsOn = [gmapi, essiren, fuseki, es5]
        waitForCommand = true
        forceRemoveImage = true
    }
}

task copyReportFiles(type: DcomposeCopyFileFromContainerTask) {
    service = dcompose.test
    containerPath = '/tmp/build/reports'
    destinationDir = file("build/from-container/")
    cleanDestinationDir = false
}

startTestContainer.finalizedBy('copyReportFiles')

shadowJar {
    classifier = 'tests'
    from sourceSets.test.output
    configurations = [project.configurations.testRuntime]
}

// making sure the that fresh build of test classes is done before building the image
buildTestImage.dependsOn shadowJar
buildTestImage.dependsOn testClasses

task integTest {
    dependsOn startTestContainer
    finalizedBy removeImages
}
